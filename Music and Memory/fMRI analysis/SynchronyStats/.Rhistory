a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
p<-ggplot(meansync) +
aes(x=type,y=corr) +
geom_boxplot(color=c("red","red","blue","blue","green","green","black","black")) +
geom_hline(yintercept=0,size=1) +
ylim(-0.4,0.4)
#print(p)
t<-print(t.test(A,I))
pval<-c(pval,t$p.value)
t<-print(t.test(A,S))
pval<-c(pval,t$p.value)
t<-print(t.test(A,W))
pval<-c(pval,t$p.value)
t<-print(t.test(I,S))
pval<-c(pval,t$p.value)
t<-print(t.test(I,W))
pval<-c(pval,t$p.value)
t<-print(t.test(S,W))
pval<-c(pval,t$p.value)
t<-(print(t.test(A1,I1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A1,S1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A1,W1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I1,S1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I1,W1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(S1,W1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A2,I2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A2,S2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A2,W2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I2,S2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I2,W2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(S2,W2)))
pval<-c(pval,t$p.value)
print('Familiar v Unfamiliar stats')
print('GroupA familiar2 v unfamiliar2')
t<-(print(t.test(Fmeansync2_A$FA2,Umeansync2_A$UA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_A$FI2,Umeansync2_A$UI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_A$FS2,Umeansync2_A$US2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_A$FW2,Umeansync2_A$UW2)))
pval<-c(pval,t$p.value)
print('GroupA familiar1 v familiar2')
t<-(print(t.test(Fmeansync1_A$FA1,Fmeansync2_A$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_A$FI1,Fmeansync2_A$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_A$FS1,Fmeansync2_A$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_A$FW1,Fmeansync2_A$FW2)))
pval<-c(pval,t$p.value)
print('GroupB familiar2 v unfamiliar2')
t<-(print(t.test(Fmeansync2_B$FA2,Umeansync2_B$UA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_B$FI2,Umeansync2_B$UI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_B$FS2,Umeansync2_B$US2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_B$FW2,Umeansync2_B$UW2)))
pval<-c(pval,t$p.value)
print('GroupB familiar 1 v familiar 2')
t<-(print(t.test(Fmeansync1_B$FA1,Fmeansync2_B$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_B$FI1,Fmeansync2_B$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_B$FS1,Fmeansync2_B$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_B$FW1,Fmeansync2_B$FW2)))
pval<-c(pval,t$p.value)
print('GroupA&B familiar 1 v familiar 2')
t<-(print(t.test(FmeansyncALL$FA1,FmeansyncALL$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(FmeansyncALL$FI1,FmeansyncALL$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(FmeansyncALL$FS1,FmeansyncALL$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(FmeansyncALL$FW1,FmeansyncALL$FW2)))
pval<-c(pval,t$p.value)
print('GroupA&B unfamiliar 1 v unfamiliar 2')
t<-(print(t.test(UmeansyncALL$UA1,UmeansyncALL$UA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UI1,UmeansyncALL$UI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$US1,UmeansyncALL$US2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UW1,UmeansyncALL$UW2)))
pval<-c(pval,t$p.value)
print('GroupA&B Unfamiliar 2 v familiar 2')
t<-(print(t.test(UmeansyncALL$UA2,FmeansyncALL$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UI2,FmeansyncALL$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$US2,FmeansyncALL$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UW2,FmeansyncALL$FW2)))
pval<-c(pval,t$p.value)
print("ANOVA - Familiar Stim (Ses1&2)")
FmeansyncALL<-FmeansyncALL %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=FmeansyncALL)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Unfamiliar Stim (Ses1&2)")
UmeansyncALL<-UmeansyncALL %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=UmeansyncALL)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Familiar Stim (Ses1)")
Fmeansync1<-Fmeansync1 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Fmeansync1)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Familiar Stim (Ses2)")
Fmeansync2<-Fmeansync2 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Fmeansync2)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Unfamiliar Stim (Ses1)")
Umeansync1<-Umeansync1 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Umeansync1)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Unfamiliar Stim (Ses2)")
Umeansync2<-Umeansync2 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Umeansync2)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
#SET UP 2x4 ANOVA
print("ANOVA - 2(ses) x 4(stim)")
l=dim(meansync2)[1]
ses<-c(rep(1,l),rep(2,l))
stim<-c(rep(1,l/4),rep(2,l/4),rep(3,l/4),rep(4,l/4),rep(1,l/4),rep(2,l/4),rep(3,l/4),rep(4,l/4))
meansync$ses<-ses
meansync$stim<-stim
fit<-aov(corr~stim + ses +stim:ses,data=meansync)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
a=summary(fit)[[1]][["Pr(>F)"]][[2]]
pval<-c(pval,a)
a=summary(fit)[[1]][["Pr(>F)"]][[3]]
pval<-c(pval,a)
#print('Plot group A & B Familiar')
#FmeansyncALL<-FmeansyncALL %>% gather(type, corr) #rearrange data
#p<-ggplot(FmeansyncALL) +
#  aes(x=type,y=corr) +
#  geom_boxplot(color=c("red","red","blue","blue","green","green","black","black")) +
#  geom_hline(yintercept=0,size=1) +
#  ylim(-0.4,0.4)
#print(p)
#print('Plot group A & B Unamiliar')
#UmeansyncALL<-UmeansyncALL %>% gather(type, corr) #rearrange data
#p<-ggplot(UmeansyncALL) +
#  aes(x=type,y=corr) +
#  geom_boxplot(color=c("red","red","blue","blue","green","green","black","black")) +
#  geom_hline(yintercept=0,size=1) +
#  ylim(-0.4,0.4)
#print(p)
sink()
write.csv(pval,file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/%s_pval.csv",str_replace(files[f],".csv","")))
}
library(tidyverse)
library(ggplot2)
library(plyr)
#fullfiles<-list.files(path = "Data", pattern="*.csv",full.names = TRUE)
#files<-list.files(path = "Data", pattern="*.csv",full.names = FALSE)
#fullfiles<-grep(list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
#                  pattern="*.csv", full.names = TRUE), pattern='pval',inv=T, value=T)
#files<-grep(list.files(path="/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
#                  pattern="*.csv", full.names = FALSE), pattern='pval', inv=T, value=T)
fullfiles<-list.files(path = "Data", pattern="*_L_",full.names = TRUE)
files<-list.files(path = "Data", pattern="_L_",full.names = FALSE)
for(f in 1:length(fullfiles)){
pval<-c()
data<-read.csv(fullfiles[f], header=FALSE) #load data
data<-rename(data,c("V1"="1_song1", "V2"="1_song2", "V3"="1_song3", "V4"="1_song4",
"V5"="1_song5", "V6"="1_song6", "V7"="1_song7", "V8"="1_song8",
"V9"="2_song1", "V10"="2_song2", "V11"="2_song3", "V12"="2_song4",
"V13"="2_song5", "V14"="2_song6", "V15"="2_song7", "V16"="2_song8"))
GroupAdata<-data[c(1,3,5,7,10,12,13,14,16,18),c(1:16)]
GroupBdata<-data[c(2,4,6,8,9,11,15,17,19),c(1:16)]
#synchrony<-data %>% gather(songs, corr) #rearrange data
##### RUN ALL STATS #####
## Gather all session 1 data
A1<-rowMeans(select(data, "1_song1","1_song8")) #ses 1 acapella data together
I1<-rowMeans(select(data, "1_song6","1_song7")) #ses 1 instrumental data together
S1<-rowMeans(select(data, "1_song2","1_song3")) #ses 1 spoken data together
W1<-rowMeans(select(data, "1_song4",'1_song5'))  #ses 1 whole data together
meansync1<-data.frame(A1,I1,S1,W1)
meansync1<-meansync1 %>% gather(type, corr) #rearrange data
## Gather all session 2 data
A2<-rowMeans(select(data, "2_song1","2_song8")) #ses 1 acapella data together
I2<-rowMeans(select(data, "2_song6","2_song7")) #ses 1 instrumental data together
S2<-rowMeans(select(data, "2_song2","2_song3")) #ses 1 spoken data together
W2<-rowMeans(select(data, "2_song4",'2_song5'))  #ses 1 whole data together
meansync2<-data.frame(A2,I2,S2,W2)
meansync2<-meansync2 %>% gather(type, corr) #rearrange data
meansync<-data.frame(A1,I1,S1,W1,A2,I2,S2,W2)
meansync<-meansync %>% gather(type, corr) #rearrange data
## Gather all data across sessions together
A<-rowMeans(select(data, "1_song1","1_song8","2_song1","2_song8"))
I<-rowMeans(select(data, "1_song6","1_song7","2_song6","2_song7"))
S<-rowMeans(select(data, "1_song2","1_song3","2_song2","2_song3"))
W<-rowMeans(select(data, "1_song4","1_song5","2_song4","2_song5"))
meansyncALL<-data.frame(A,I,S,W)
meansyncALL<-meansyncALL %>% gather(type, corr) #rearrange data
sprintf("%s.txt",str_replace(files[f],".csv",""))
# GROUP ALL FAMILIAR DATA
FA1<-rowMeans(select(GroupAdata, "1_song8"))
FI1<-rowMeans(select(GroupAdata, '1_song7'))
FS1<-rowMeans(select(GroupAdata, "1_song2"))
FW1<-rowMeans(select(GroupAdata, "1_song4"))
Fmeansync1_A<-data.frame(FA1,FI1,FS1,FW1)
#Fmeansync1_A<-Fmeansync1_A %>% gather(type, corr) #rearrange data
FA1<-rowMeans(select(GroupBdata, "1_song1"))
FI1<-rowMeans(select(GroupBdata, '1_song6'))
FS1<-rowMeans(select(GroupBdata, "1_song3"))
FW1<-rowMeans(select(GroupBdata, "1_song5"))
Fmeansync1_B<-data.frame(FA1,FI1,FS1,FW1)
#Fmeansync1_B<-Fmeansync1_B %>% gather(type, corr) #rearrange data
FA2<-rowMeans(select(GroupAdata, "2_song8"))
FI2<-rowMeans(select(GroupAdata, '2_song7'))
FS2<-rowMeans(select(GroupAdata, "2_song2"))
FW2<-rowMeans(select(GroupAdata, "2_song4"))
Fmeansync2_A<-data.frame(FA2,FI2,FS2,FW2)
#Fmeansync2_A<-Fmeansync2_A %>% gather(type, corr) #rearrange data
FA2<-rowMeans(select(GroupBdata, "2_song1"))
FI2<-rowMeans(select(GroupBdata, '2_song6'))
FS2<-rowMeans(select(GroupBdata, "2_song3"))
FW2<-rowMeans(select(GroupBdata, "2_song5"))
Fmeansync2_B<-data.frame(FA2,FI2,FS2,FW2)
#Fmeansync2_B<-Fmeansync2_B %>% gather(type, corr) #rearrange data
# GROUP ALL UNFAMILIAR DATA
UA1<-rowMeans(select(GroupAdata, "1_song1"))
UI1<-rowMeans(select(GroupAdata, '1_song6'))
US1<-rowMeans(select(GroupAdata, "1_song3"))
UW1<-rowMeans(select(GroupAdata, "1_song5"))
Umeansync1_A<-data.frame(UA1,UI1,US1,UW1)
#Umeansync1_A<-meansync1 %>% gather(type, corr) #rearrange data
UA1<-rowMeans(select(GroupBdata, "1_song8"))
UI1<-rowMeans(select(GroupBdata, '1_song7'))
US1<-rowMeans(select(GroupBdata, "1_song4"))
UW1<-rowMeans(select(GroupBdata, "1_song2"))
Umeansync1_B<-data.frame(UA1,UI1,US1,UW1)
#Umeansync1_B<-Umeansync1_B %>% gather(type, corr) #rearrange data
UA2<-rowMeans(select(GroupAdata, "2_song1"))
UI2<-rowMeans(select(GroupAdata, '2_song6'))
US2<-rowMeans(select(GroupAdata, "2_song3"))
UW2<-rowMeans(select(GroupAdata, "2_song5"))
Umeansync2_A<-data.frame(UA2,UI2,US2,UW2)
#Umeansync2_A<-Umeansync2_A %>% gather(type, corr) #rearrange data
UA2<-rowMeans(select(GroupBdata, "2_song8"))
UI2<-rowMeans(select(GroupBdata, '2_song7'))
US2<-rowMeans(select(GroupBdata, "2_song4"))
UW2<-rowMeans(select(GroupBdata, "2_song2"))
Umeansync2_B<-data.frame(UA2,UI2,US2,UW2)
#Umeansync2_B<-Umeansync2_B %>% gather(type, corr) #rearrange data
FmeansyncA<-cbind(Fmeansync1_A, Fmeansync2_A)
FmeansyncB<-cbind(Fmeansync1_B, Fmeansync2_B)
UmeansyncA<-cbind(Umeansync1_A, Umeansync2_A)
UmeansyncB<-cbind(Umeansync1_B, Umeansync2_B)
Fmeansync1<-rbind(Fmeansync1_A, Fmeansync1_B)
Fmeansync2<-rbind(Fmeansync2_A, Fmeansync2_B)
Umeansync1<-rbind(Umeansync1_A, Umeansync1_B)
Umeansync2<-rbind(Umeansync2_A, Umeansync2_B)
FmeansyncALL<-rbind(FmeansyncA, FmeansyncB)
UmeansyncALL<-rbind(UmeansyncA, UmeansyncB)
##### START PRINTING RESULTS TO TEXT FILE #####
sink(file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/%s.txt",str_replace(files[f],".csv","")))
files[f]
## Stats
print("Session 1 ANOVA")
fit<-aov(corr~type,data=meansync1)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("Session 2 ANOVA")
fit<-aov(corr~type,data=meansync2)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("Session 1&2 ANOVA")
fit<-aov(corr~type,data=meansyncALL)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
p<-ggplot(meansync) +
aes(x=type,y=corr) +
geom_boxplot(color=c("red","red","blue","blue","green","green","black","black")) +
geom_hline(yintercept=0,size=1) +
ylim(-0.4,0.4)
#print(p)
t<-print(t.test(A,I))
pval<-c(pval,t$p.value)
t<-print(t.test(A,S))
pval<-c(pval,t$p.value)
t<-print(t.test(A,W))
pval<-c(pval,t$p.value)
t<-print(t.test(I,S))
pval<-c(pval,t$p.value)
t<-print(t.test(I,W))
pval<-c(pval,t$p.value)
t<-print(t.test(S,W))
pval<-c(pval,t$p.value)
t<-(print(t.test(A1,I1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A1,S1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A1,W1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I1,S1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I1,W1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(S1,W1)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A2,I2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A2,S2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(A2,W2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I2,S2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(I2,W2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(S2,W2)))
pval<-c(pval,t$p.value)
print('Familiar v Unfamiliar stats')
print('GroupA familiar2 v unfamiliar2')
t<-(print(t.test(Fmeansync2_A$FA2,Umeansync2_A$UA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_A$FI2,Umeansync2_A$UI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_A$FS2,Umeansync2_A$US2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_A$FW2,Umeansync2_A$UW2)))
pval<-c(pval,t$p.value)
print('GroupA familiar1 v familiar2')
t<-(print(t.test(Fmeansync1_A$FA1,Fmeansync2_A$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_A$FI1,Fmeansync2_A$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_A$FS1,Fmeansync2_A$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_A$FW1,Fmeansync2_A$FW2)))
pval<-c(pval,t$p.value)
print('GroupB familiar2 v unfamiliar2')
t<-(print(t.test(Fmeansync2_B$FA2,Umeansync2_B$UA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_B$FI2,Umeansync2_B$UI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_B$FS2,Umeansync2_B$US2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync2_B$FW2,Umeansync2_B$UW2)))
pval<-c(pval,t$p.value)
print('GroupB familiar 1 v familiar 2')
t<-(print(t.test(Fmeansync1_B$FA1,Fmeansync2_B$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_B$FI1,Fmeansync2_B$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_B$FS1,Fmeansync2_B$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(Fmeansync1_B$FW1,Fmeansync2_B$FW2)))
pval<-c(pval,t$p.value)
print('GroupA&B familiar 1 v familiar 2')
t<-(print(t.test(FmeansyncALL$FA1,FmeansyncALL$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(FmeansyncALL$FI1,FmeansyncALL$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(FmeansyncALL$FS1,FmeansyncALL$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(FmeansyncALL$FW1,FmeansyncALL$FW2)))
pval<-c(pval,t$p.value)
print('GroupA&B unfamiliar 1 v unfamiliar 2')
t<-(print(t.test(UmeansyncALL$UA1,UmeansyncALL$UA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UI1,UmeansyncALL$UI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$US1,UmeansyncALL$US2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UW1,UmeansyncALL$UW2)))
pval<-c(pval,t$p.value)
print('GroupA&B Unfamiliar 2 v familiar 2')
t<-(print(t.test(UmeansyncALL$UA2,FmeansyncALL$FA2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UI2,FmeansyncALL$FI2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$US2,FmeansyncALL$FS2)))
pval<-c(pval,t$p.value)
t<-(print(t.test(UmeansyncALL$UW2,FmeansyncALL$FW2)))
pval<-c(pval,t$p.value)
print("ANOVA - Familiar Stim (Ses1&2)")
FmeansyncALL<-FmeansyncALL %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=FmeansyncALL)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Unfamiliar Stim (Ses1&2)")
UmeansyncALL<-UmeansyncALL %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=UmeansyncALL)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Familiar Stim (Ses1)")
Fmeansync1<-Fmeansync1 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Fmeansync1)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Familiar Stim (Ses2)")
Fmeansync2<-Fmeansync2 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Fmeansync2)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Unfamiliar Stim (Ses1)")
Umeansync1<-Umeansync1 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Umeansync1)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - Unfamiliar Stim (Ses2)")
Umeansync2<-Umeansync2 %>% gather(type, corr) #rearrange data
fit<-aov(corr~type,data=Umeansync2)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
#SET UP 2x4 ANOVA
print("ANOVA - 2(ses) x 4(stim)")
l=dim(meansync2)[1]
ses<-c(rep(1,l),rep(2,l))
stim<-c(rep(1,l/4),rep(2,l/4),rep(3,l/4),rep(4,l/4),rep(1,l/4),rep(2,l/4),rep(3,l/4),rep(4,l/4))
meansync$ses<-ses
meansync$stim<-stim
fit<-aov(corr~stim + ses +stim:ses,data=meansync)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
a=summary(fit)[[1]][["Pr(>F)"]][[2]]
pval<-c(pval,a)
a=summary(fit)[[1]][["Pr(>F)"]][[3]]
pval<-c(pval,a)
#print('Plot group A & B Familiar')
#FmeansyncALL<-FmeansyncALL %>% gather(type, corr) #rearrange data
#p<-ggplot(FmeansyncALL) +
#  aes(x=type,y=corr) +
#  geom_boxplot(color=c("red","red","blue","blue","green","green","black","black")) +
#  geom_hline(yintercept=0,size=1) +
#  ylim(-0.4,0.4)
#print(p)
#print('Plot group A & B Unamiliar')
#UmeansyncALL<-UmeansyncALL %>% gather(type, corr) #rearrange data
#p<-ggplot(UmeansyncALL) +
#  aes(x=type,y=corr) +
#  geom_boxplot(color=c("red","red","blue","blue","green","green","black","black")) +
#  geom_hline(yintercept=0,size=1) +
#  ylim(-0.4,0.4)
#print(p)
sink()
write.csv(pval,file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/%s_pval.csv",str_replace(files[f],".csv","")))
}
library(tidyverse)
library(ggplot2)
library(plyr)
#CORRECT P VALS FOR MULTIPLE COMPARISONS - FDR
fullfiles<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
pattern="*_pval.csv",full.names = TRUE)
files<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
pattern="*_pval.csv",full.names = FALSE)
for(f in 1:length(fullfiles)){
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
p=data$pval
p_adj<-p.adjust(p,method="fdr",n=length(p))
write.csv(p_adj,file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/%s_adj.csv",str_replace(files[f],".csv","")))
}
#EXTRACT SIG P VALS AFTER FDR CORRECTION
fullfiles<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
pattern="*_pval_adj.csv",full.names = TRUE)
files<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
pattern="*_pval_adj.csv",full.names = FALSE)
sink(file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/SummaryDocs/AdjPVal_Summary.txt"))
for(f in 1:length(fullfiles)){
tests<-c()
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
for(p in 1:length(data$test)){
if(data$pval[p] < 0.06)
tests<-c(tests,data$test[p])
}
print(files[f])
print(tests)
}
sink()
