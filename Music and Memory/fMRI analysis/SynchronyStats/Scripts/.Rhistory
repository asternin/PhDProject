print(files[f])
print(tests)
for(f in 1:length(fullfiles)){
tests<-c()
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
for(p in 1:length(data$test)){
if(data$pval[p] < 0.06)
tests<-c(tests,data$test[p])
}
print(files[f])
print(tests)
}
sink()
sink()
library(tidyverse)
library(ggplot2)
library(plyr)
#CORRECT P VALS FOR MULTIPLE COMPARISONS - FDR
#WINDOWS
#fullfiles<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
#                      pattern="*_pval.csv",full.names = TRUE)
#files<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
#                  pattern="*_pval.csv",full.names = FALSE)
#MAC
fullfiles<-grep(list.files(path = "/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval.csv", full.names = TRUE), pattern='_pval.csv',inv=F, value=T)
files<-grep(list.files(path="/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval.csv", full.names = FALSE), pattern='pval', inv=F, value=T)
for(f in 1:length(fullfiles)){
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
p=data$pval
p_adj<-p.adjust(p,method="fdr",n=length(p))
#write.csv(p_adj,file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s_adj.csv",str_replace(files[f],".csv","")))
write.csv(p_adj,file=sprintf("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s_adj.csv",str_replace(files[f],".csv","")))
}
#EXTRACT SIG P VALS AFTER FDR CORRECTION
#WINDOWS
#fullfiles<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*_pval_adj.csv",full.names = TRUE)
#files<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*_pval_adj.csv",full.names = FALSE)
#MAC
fullfiles<-grep(list.files(path = "/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval_adj.csv", full.names = TRUE), pattern='pval',inv=F, value=T)
files<-grep(list.files(path="/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval_adj.csv", full.names = FALSE), pattern='pval', inv=F, value=T)
#sink(file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/SummaryDocs/OA_AdjPVal_Summary.txt"))
sink(file=sprintf("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/SummaryDocs/OA_AdjPVal_Summary.txt"))
for(f in 1:length(fullfiles)){
tests<-c()
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
for(p in 1:length(data$test)){
if(data$pval[p] < 0.06)
tests<-c(tests,data$test[p])
}
print(files[f])
print(tests)
}
sink()
#ANOVA with LyrOr Covariate
meansync$lyror<-LyrOrdata$LyrOr
#WINDOWS
#fullfiles<-grep(list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*.csv", full.names = TRUE), pattern='pval',inv=T, value=T)
#files<-grep(list.files(path="/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*.csv", full.names = FALSE), pattern='pval', inv=T, value=T)
#LyrOrdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/BehaviouralResults/LyrOrScores.csv")
#MAC
fullfiles<-grep(list.files(path = "/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*.csv", full.names = TRUE), pattern='pval',inv=T, value=T)
files<-grep(list.files(path="/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*.csv", full.names = FALSE), pattern='pval', inv=T, value=T)
LyrOrdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/BehaviouralResults/OlderAdults/LyrOrScores.csv")
LyrOrdata<-LyrOrdata[-c(1,2), ]
f<-1
data<-read.csv(fullfiles[f], header=FALSE) #load data
data<-rename(data,c("V1"="1_song2", "V2"="1_song3", "V3"="1_song4", "V4"="1_song5",
"V5"="1_song6", "V6"="1_song7", "V7"="1_song9", "V8"="1_song10"))
##### RUN ALL STATS #####
## Gather all data
I1<-rowMeans(select(data, "1_song6","1_song7")) #ses 1 instrumental data together
S1<-rowMeans(select(data, "1_song2","1_song3")) #ses 1 spoken data together
W1<-rowMeans(select(data, "1_song4","1_song5"))  #ses 1 whole data together
WF<-rowMeans(select(data, "1_song9")) #Beatles Hey Jude
SF<-rowMeans(select(data, "1_song10")) #Twas the night before Christmas
meansync1<-data.frame(I1,S1,W1)
meansync1<-meansync1 %>% gather(type, corr) #rearrange data
meansync<-data.frame(I1,S1,W1,SF,WF)
meansync<-meansync %>% gather(type, corr) #rearrange data
#ANOVA with LyrOr Covariate
meansync$lyror<-LyrOrdata$LyrOr
mod.full <- lm(corr~lyror + type, data=meansync)
mod.rest <- lm(corr~lyror ,data=meansync)
a2 <- anova(mod.full, mod.rest)
print(a2)
pval<-c(pval,a2$'Pr(>F)'[2])
pval<-c()
pval<-c(pval,a2$'Pr(>F)'[2])
a3 <- anova(mod.full)
print(a3)
summary(a3)[1,5]
summary(a3)
a=summary(a3)[2,5]
summary(a3)[2,5]
pval<-c(pval,a3$'Pr(>F)'[2])
pval
a3
summary(a3)
a3
a3$'Pr(>F)'
a3$'Pr(>F)'[1]
a3$'Pr(>F)'[2]
pval<-c(pval,a3$'Pr(>F)'[1])
pval
pval<-c()
pval<-c(pval,a3$'Pr(>F)'[1])
pval<-c(pval,a3$'Pr(>F)'[2])
pval
library(tidyverse)
library(ggplot2)
library(plyr)
#fullfiles<-list.files(path = "Data", pattern="*.csv",full.names = TRUE)
#files<-list.files(path = "Data", pattern="*.csv",full.names = FALSE)
#fullfiles<-list.files(path = "Data", pattern="*_L_",full.names = TRUE)
#files<-list.files(path = "Data", pattern="_L_",full.names = FALSE)
#WINDOWS
#fullfiles<-grep(list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*.csv", full.names = TRUE), pattern='pval',inv=T, value=T)
#files<-grep(list.files(path="/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*.csv", full.names = FALSE), pattern='pval', inv=T, value=T)
#LyrOrdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/BehaviouralResults/LyrOrScores.csv")
#MAC
fullfiles<-grep(list.files(path = "/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*.csv", full.names = TRUE), pattern='pval',inv=T, value=T)
files<-grep(list.files(path="/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*.csv", full.names = FALSE), pattern='pval', inv=T, value=T)
LyrOrdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/BehaviouralResults/OlderAdults/LyrOrScores.csv")
LyrOrdata<-LyrOrdata[-c(1,2), ]
for(f in 1:length(fullfiles)){
pval<-c()
data<-read.csv(fullfiles[f], header=FALSE) #load data
data<-rename(data,c("V1"="1_song2", "V2"="1_song3", "V3"="1_song4", "V4"="1_song5",
"V5"="1_song6", "V6"="1_song7", "V7"="1_song9", "V8"="1_song10"))
#synchrony<-data %>% gather(songs, corr) #rearrange data
##### RUN ALL STATS #####
## Gather all data
I1<-rowMeans(select(data, "1_song6","1_song7")) #ses 1 instrumental data together
S1<-rowMeans(select(data, "1_song2","1_song3")) #ses 1 spoken data together
W1<-rowMeans(select(data, "1_song4","1_song5"))  #ses 1 whole data together
WF<-rowMeans(select(data, "1_song9")) #Beatles Hey Jude
SF<-rowMeans(select(data, "1_song10")) #Twas the night before Christmas
meansync1<-data.frame(I1,S1,W1)
meansync1<-meansync1 %>% gather(type, corr) #rearrange data
meansync<-data.frame(I1,S1,W1,SF,WF)
meansync<-meansync %>% gather(type, corr) #rearrange data
sprintf("%s.txt",str_replace(files[f],".csv",""))
##### START PRINTING RESULTS TO TEXT FILE #####
#WINDOWS
#sink(file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s.txt",str_replace(files[f],".csv","")))
#MAC
sink(file=sprintf("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s.txt",str_replace(files[f],".csv","")))
files[f]
## Stats
print("ANOVA - Unfamiliar I S W")
fit<-aov(corr~type,data=meansync1)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
print("ANOVA - I S W WF SF")
fit<-aov(corr~type,data=meansync)
print(summary(fit))
a=summary(fit)[[1]][["Pr(>F)"]][[1]]
pval<-c(pval,a)
p<-ggplot(meansync1) +
aes(x=type,y=corr) +
geom_boxplot(color=c("red","blue","green")) +
geom_hline(yintercept=0,size=1) +
ylim(-0.4,0.4)
p<-ggplot(meansync) +
aes(x=type,y=corr) +
geom_boxplot(color=c("red","blue","blue","green","green")) +
geom_hline(yintercept=0,size=1) +
ylim(-0.4,0.4)
#print(p)
t<-print(t.test(I1,S1))
pval<-c(pval,t$p.value)
t<-print(t.test(I1,W1))
pval<-c(pval,t$p.value)
t<-print(t.test(S1,W1))
pval<-c(pval,t$p.value)
t<-print(t.test(S1,SF))
pval<-c(pval,t$p.value)
t<-print(t.test(W1,WF))
pval<-c(pval,t$p.value)
#ANOVA with LyrOr Covariate
meansync$lyror<-LyrOrdata$LyrOr
mod.full <- lm(corr~lyror + type, data=meansync)
mod.rest <- lm(corr~lyror ,data=meansync)
a2 <- anova(mod.full, mod.rest)
print(a2)
pval<-c(pval,a2$'Pr(>F)'[2])
a3 <- anova(mod.full)
print(a3)
pval<-c(pval,a3$'Pr(>F)'[1])
pval<-c(pval,a3$'Pr(>F)'[2])
sink()
#WINDOWS
#write.csv(pval,file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s_pval.csv",str_replace(files[f],".csv","")))
#MAC
write.csv(pval,file=sprintf("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s_pval.csv",str_replace(files[f],".csv","")))
}
library(tidyverse)
library(ggplot2)
library(plyr)
#CORRECT P VALS FOR MULTIPLE COMPARISONS - FDR
#WINDOWS
#fullfiles<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
#                      pattern="*_pval.csv",full.names = TRUE)
#files<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data",
#                  pattern="*_pval.csv",full.names = FALSE)
#MAC
fullfiles<-grep(list.files(path = "/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval.csv", full.names = TRUE), pattern='_pval.csv',inv=F, value=T)
files<-grep(list.files(path="/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval.csv", full.names = FALSE), pattern='pval', inv=F, value=T)
for(f in 1:length(fullfiles)){
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
p=data$pval
p_adj<-p.adjust(p,method="fdr",n=length(p))
#write.csv(p_adj,file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s_adj.csv",str_replace(files[f],".csv","")))
write.csv(p_adj,file=sprintf("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/%s_adj.csv",str_replace(files[f],".csv","")))
}
#EXTRACT SIG P VALS AFTER FDR CORRECTION
#WINDOWS
#fullfiles<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*_pval_adj.csv",full.names = TRUE)
#files<-list.files(path = "/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
#                  pattern="*_pval_adj.csv",full.names = FALSE)
#MAC
fullfiles<-grep(list.files(path = "/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval_adj.csv", full.names = TRUE), pattern='pval',inv=F, value=T)
files<-grep(list.files(path="/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults",
pattern="*_pval_adj.csv", full.names = FALSE), pattern='pval', inv=F, value=T)
#sink(file=sprintf("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/SummaryDocs/OA_AdjPVal_Summary.txt"))
sink(file=sprintf("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/SummaryDocs/OA_AdjPVal_Summary.txt"))
for(f in 1:length(fullfiles)){
tests<-c()
data<-read.csv(fullfiles[f], header=TRUE) #load data
data<-rename(data,c("X"="test", "x"="pval"))
for(p in 1:length(data$test)){
if(data$pval[p] < 0.06)
tests<-c(tests,data$test[p])
}
print(files[f])
print(tests)
}
sink()
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-ISCdata[-c(6),]
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
View(ISCdata)
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv", Header="FALSE")
View(ISCdata)
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv",
col_name="FALSE")
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv",
col_names="FALSE")
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv",
col_names=FALSE)
ISCdata<-rename(ISCdata,c("X1"="song_2", "X2"="song_3", "X3"="song_4", "X4"="song_5",
"X5"="song_6", "X6"="song_7", "X7"="song_9", "X8"="song_10"))
#CBSdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/BehaviouralResults/CBSScoresForISC.csv")
CBSdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/BehaviouralResults/OlderAdults/CBSScoresForISC.csv")
View(CBSdata)
CBSdata<-CBSdata[-c(1,2),]
CBSdata<-CBSdata[,-1] #remove ID variable
CBSdata<-rename(CBSdata,c("Paired Associates"="PA", "Odd One Out (Max)"="OOO", "Polygons"="P", "Grammatical Reasoning"="GR",
"Double Trouble"="DT", "Monkey Ladder"="ML", "Digit Span"="DS", "Token Search"="TS",
"Feature Match"="FM", "Spatial Planning"="SP", "Spatial Span"="SS", "Rotations"="R"))
data<-cbind(ISCdata,CBSdata)
I1<-rowMeans(select(data, "song_6","song_7"))
S1<-rowMeans(select(data, "song_2","song_3"))
W1<-rowMeans(select(data, "song_4","song_5"))
s<-A1
s<-I1
t<-data$DS
regfuncmus(s,t)
#
## REGRESSIONS PREDICTING CBS SCORES
regfuncage<-function(s,t){
m0<-lm(t~age,data=data)
mall<-lm(t~age+s,data=data)
mbest<-step(m0,list(lower=m0,upper=mall),direction="both")
summary(mbest)
}
regfuncmus<-function(s,t){
m0<-lm(t~age+MusicExpRating+MusicYrsMax,data=data)
mall<-lm(t~age+MusicExpRating+MusicYrsMax+s,data=data)
mbest<-step(m0,list(lower=m0,upper=mall),direction="both")
summary(mbest)
}
s<-I1
t<-data$DS
regfuncmus(s,t)
regfuncage(s,t)
t<-data$GR
regfuncage(s,t)
t<-data$DT
regfuncage(s,t)
t<-data$OOO
regfuncage(s,t)
t<-data$SP
regfuncage(s,t)
t<-data$SP
regfuncage(s,t)
t<-data$R
regfuncage(s,t)
t<-data$FM
regfuncage(s,t)
t<-data$P
regfuncage(s,t)
t<-data$SS
regfuncage(s,t)
t<-data$PA
regfuncage(s,t)
t<-data$TS
regfuncage(s,t)
t<-data$ML
regfuncage(s,t)
s<-W1
t<-data$DS
regfuncage(s,t)
t<-data$GR
regfuncage(s,t)
t<-data$DT
regfuncage(s,t)
t<-data$OOO
regfuncage(s,t)
t<-data$SP
regfuncage(s,t)
t<-data$R
regfuncage(s,t)
t<-data$FM
regfuncage(s,t)
t<-data$P
regfuncage(s,t)
t<-data$SS
regfuncage(s,t)
t<-data$PA
regfuncage(s,t)
t<-data$TS
regfuncage(s,t)
t<-data$ML
regfuncage(s,t)
s<-S1
t<-data$DS
regfuncage(s,t)
t<-data$GR
regfuncage(s,t)
t<-data$DT
regfuncage(s,t)
t<-data$OOO
regfuncage(s,t)
t<-data$SP
regfuncage(s,t)
t<-data$R
regfuncage(s,t)
t<-data$FM
regfuncage(s,t)
t<-data$P
regfuncage(s,t)
t<-data$SS
regfuncage(s,t)
t<-data$PA
regfuncage(s,t)
t<-data$TS
regfuncage(s,t)
t<-data$ML
regfuncage(s,t)
s<-I1
t<-data$ML
regfuncmus(s,t)
t<-data$DS
regfuncmus(s,t)
t<-data$GR
regfuncmus(s,t)
t<-data$DT
regfuncmus(s,t)
t<-data$OOO
regfuncmus(s,t)
t<-data$SP
regfuncmus(s,t)
t<-data$R
regfuncmus(s,t)
t<-data$FM
regfuncmus(s,t)
t<-data$P
regfuncmus(s,t)
t<-data$SS
regfuncmus(s,t)
t<-data$PA
regfuncmus(s,t)
t<-data$TS
regfuncmus(s,t)
t<-data$ML
regfuncmus(s,t)
t<-data$DS
s<-W1
t<-data$DS
regfuncmus(s,t)
t<-data$GR
regfuncmus(s,t)
t<-data$DT
regfuncmus(s,t)
t<-data$OOO
regfuncmus(s,t)
t<-data$SP
regfuncmus(s,t)
t<-data$R
regfuncmus(s,t)
t<-data$FM
regfuncmus(s,t)
t<-data$P
regfuncmus(s,t)
t<-data$SS
regfuncmus(s,t)
t<-data$PA
regfuncmus(s,t)
t<-data$TS
regfuncmus(s,t)
t<-data$ML
regfuncmus(s,t)
s<-S1
t<-data$DS
regfuncmus(s,t)
t<-data$DGR
t<-data$GR
regfuncmus(s,t)
t<-data$DT
regfuncmus(s,t)
t<-data$OOO
regfuncmus(s,t)
t<-data$SP
regfuncmus(s,t)
t<-data$R
regfuncmus(s,t)
t<-data$FM
regfuncmus(s,t)
t<-data$P
regfuncmus(s,t)
t<-data$SS
regfuncmus(s,t)
t<-data$PA
regfuncmus(s,t)
t<-data$TS
regfuncmus(s,t)
t<-data$ML
regfuncmus(s,t)
library(tidyverse)
library(ggplot2)
library(plyr)
#ISCdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv")
ISCdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/fMRI analysis/SynchronyStats/Data/OlderAdults/Yeo_6.csv",
col_names=FALSE)
ISCdata<-rename(ISCdata,c("X1"="song_2", "X2"="song_3", "X3"="song_4", "X4"="song_5",
"X5"="song_6", "X6"="song_7", "X7"="song_9", "X8"="song_10"))
#CBSdata<-readr::read_csv("/Users/asternin/Documents/PhDProject/Music and Memory/BehaviouralResults/CBSScoresForISC.csv")
CBSdata<-readr::read_csv("/Users/avitalsternin/Documents/Western/Academics/PhDProject.git/Music and Memory/BehaviouralResults/OlderAdults/CBSScoresForISC.csv")
CBSdata<-CBSdata[-c(1,2),]
CBSdata<-CBSdata[,-1] #remove ID variable
CBSdata<-rename(CBSdata,c("Paired Associates"="PA", "Odd One Out (Max)"="OOO", "Polygons"="P", "Grammatical Reasoning"="GR",
"Double Trouble"="DT", "Monkey Ladder"="ML", "Digit Span"="DS", "Token Search"="TS",
"Feature Match"="FM", "Spatial Planning"="SP", "Spatial Span"="SS", "Rotations"="R"))
data<-cbind(ISCdata,CBSdata)
I1<-rowMeans(select(data, "song_6","song_7"))
S1<-rowMeans(select(data, "song_2","song_3"))
W1<-rowMeans(select(data, "song_4","song_5"))
stim<-c("A1","I1")#
## REGRESSIONS PREDICTING CBS SCORES
regfuncage<-function(s,t){
m0<-lm(t~age,data=data)
mall<-lm(t~age+s,data=data)
mbest<-step(m0,list(lower=m0,upper=mall),direction="both")
summary(mbest)
}
regfuncmus<-function(s,t){
m0<-lm(t~age+MusicExpRating+MusicYrsMax,data=data)
mall<-lm(t~age+MusicExpRating+MusicYrsMax+s,data=data)
mbest<-step(m0,list(lower=m0,upper=mall),direction="both")
summary(mbest)
}
s<-S1
t<-data$DS
regfuncmus(s,t)
s<-S1
t<-data$DS
regfuncmus(s,t)
s<-S1
t<-data$GR
regfuncmus(s,t)
t<-data$DT
regfuncmus(s,t)
